// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`unit tests of component Layout should Layout match with Snapshot 1`] = `
Array [
  <script
    dangerouslySetInnerHTML={
      Object {
        "__html": "(function setScript(initialValue) {
  var mql = window.matchMedia(\\"(prefers-color-scheme: dark)\\");
  var systemPreference = mql.matches ? \\"dark\\" : \\"light\\";
  var persistedPreference;

  try {
    persistedPreference = localStorage.getItem(\\"chakra-ui-color-mode\\");
  } catch (error) {
    console.log(\\"Chakra UI: localStorage is not available. Color mode persistence might not work as expected\\");
  }

  var isInStorage = typeof persistedPreference === \\"string\\";
  var colorMode;

  if (isInStorage) {
    colorMode = persistedPreference;
  } else {
    colorMode = initialValue === \\"system\\" ? systemPreference : initialValue;
  }

  if (colorMode) {
    var root = document.documentElement;
    root.style.setProperty(\\"--chakra-ui-color-mode\\", colorMode);
  }
})('light')",
      }
    }
  />,
  <div
    className="css-1oc3kdx"
  >
    <p
      className="chakra-text css-ggbnnk"
    >
      Lenovo Internal Use Only
    </p>
  </div>,
  <div
    className="chakra-stack css-iew95a"
  >
    <div
      className="css-17xejub"
    />
    <div
      data-testid="notification-highlight"
      hidden={true}
    />
    <button
      aria-controls="popover-content-24"
      aria-expanded={false}
      aria-haspopup="dialog"
      className="chakra-button css-fny3a9"
      id="popover-trigger-24"
      onClick={[Function]}
      title="notifications"
      type="button"
    >
      <svg
        aria-hidden={true}
        fill="currentColor"
        focusable={false}
        height="2.4rem"
        stroke="currentColor"
        strokeWidth="0"
        style={
          Object {
            "color": undefined,
          }
        }
        viewBox="0 0 24 24"
        width="2.4rem"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          d="M19 13.586V10c0-3.217-2.185-5.927-5.145-6.742C13.562 2.52 12.846 2 12 2s-1.562.52-1.855 1.258C7.185 4.074 5 6.783 5 10v3.586l-1.707 1.707C3.105 15.48 3 15.734 3 16v2c0 .553.447 1 1 1h16c.553 0 1-.447 1-1v-2c0-.266-.105-.52-.293-.707L19 13.586zM19 17H5v-.586l1.707-1.707C6.895 14.52 7 14.266 7 14v-4c0-2.757 2.243-5 5-5s5 2.243 5 5v4c0 .266.105.52.293.707L19 16.414V17zM12 22c1.311 0 2.407-.834 2.818-2H9.182C9.593 21.166 10.689 22 12 22z"
        />
      </svg>
    </button>
    <div
      className="chakra-popover__popper css-1qq679y"
      style={
        Object {
          "--popper-arrow-shadow-color": undefined,
          "--popper-arrow-size": "2rem",
          "minWidth": "max-content",
          "position": "absolute",
          "visibility": "hidden",
        }
      }
    >
      <section
        className="chakra-popover__content css-1t3epn1"
        data-testid="popover-content"
        id="popover-content-24"
        onBlur={[Function]}
        onKeyDown={[Function]}
        role="dialog"
        style={
          Object {
            "opacity": 0,
            "transform": "scale(0.95) translateZ(0)",
            "transformOrigin": "var(--popper-transform-origin)",
            "visibility": "hidden",
          }
        }
        tabIndex={-1}
      />
    </div>
    <hr
      aria-orientation="vertical"
      className="chakra-divider css-1sa5k3g"
    />
    <div>
      <p>
        Username
      </p>
      <p>
        Role
      </p>
    </div>
    <button
      aria-controls="menu-list-26"
      aria-expanded={false}
      aria-haspopup="menu"
      className="chakra-button chakra-menu__menu-button css-fny3a9"
      id="menu-button-26"
      onClick={[Function]}
      onKeyDown={[Function]}
      title="menu-button"
      type="button"
    >
      <svg
        aria-hidden={true}
        className="chakra-icon css-9xvt5q"
        focusable={false}
        viewBox="0 0 24 24"
      >
        <path
          d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"
          fill="currentColor"
        />
      </svg>
    </button>
    <div
      className="css-r6z5ec"
      style={
        Object {
          "minWidth": "max-content",
          "position": "absolute",
          "visibility": "hidden",
        }
      }
    >
      <div
        aria-orientation="vertical"
        className="chakra-menu__menu-list css-1ozmk1d"
        id="menu-list-26"
        onKeyDown={[Function]}
        role="menu"
        style={
          Object {
            "opacity": 0,
            "transform": "scale(0.8) translateZ(0)",
            "transformOrigin": "var(--popper-transform-origin)",
            "visibility": "hidden",
          }
        }
        tabIndex={-1}
      >
        <button
          className="chakra-menu__menuitem css-1o1lg74"
          id="menu-list-26-menuitem-27"
          onClick={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseMove={[Function]}
          role="menuitem"
          tabIndex={0}
          type="button"
        >
          <svg
            fill="none"
            height="1em"
            stroke="currentColor"
            strokeLinecap="round"
            strokeLinejoin="round"
            strokeWidth="2"
            style={
              Object {
                "color": undefined,
              }
            }
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M18.36 6.64a9 9 0 1 1-12.73 0"
            />
            <line
              x1="12"
              x2="12"
              y1="2"
              y2="12"
            />
          </svg>
          Logout
        </button>
      </div>
    </div>
    <span
      className="chakra-avatar css-1gz8kg1"
    >
      <div
        aria-label="Avatar"
        className="chakra-avatar__initials css-uo84k3"
        role="img"
      >
        A
      </div>
    </span>
  </div>,
  <div
    className="css-18uue5h"
  >
    <div
      className="css-1xip3bv"
      data-testid="sidemenu-pane"
    >
      <img
        src="/logo-lenovo.png"
        title="logo-lenovo1"
      />
      <img
        src="/logo-lenovo-mw.png"
        title="logo-lenovo2"
      />
      <div
        className="css-j7qwjs"
      >
        <div
          className="chakra-linkbox css-10n1vic"
        >
          <svg
            className="chakra-icon css-n17ngm"
            fill="currentColor"
            focusable={false}
            height="1em"
            stroke="currentColor"
            strokeWidth="0"
            style={
              Object {
                "color": undefined,
              }
            }
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z"
            />
          </svg>
          <a
            className="chakra-linkbox__overlay css-1hnz6hu"
            href={null}
            name="Dashboard"
          >
            Dashboard
          </a>
        </div>
        <div
          className="chakra-linkbox css-10n1vic"
        >
          <svg
            className="chakra-icon css-n17ngm"
            fill="currentColor"
            focusable={false}
            height="1em"
            stroke="currentColor"
            strokeWidth="0"
            style={
              Object {
                "color": undefined,
              }
            }
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-1 9H9V9h10v2zm-4 4H9v-2h6v2zm4-8H9V5h10v2z"
            />
          </svg>
          <a
            className="chakra-linkbox__overlay css-1hnz6hu"
            href="/models"
            name="Models"
          >
            Models
          </a>
        </div>
        <div
          className="chakra-linkbox css-10n1vic"
        >
          <svg
            className="chakra-icon css-n17ngm"
            fill="currentColor"
            focusable={false}
            height="1em"
            stroke="currentColor"
            strokeWidth="0"
            style={
              Object {
                "color": undefined,
              }
            }
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <g>
              <path
                d="M0 0h24v24H0z"
                fill="none"
              />
              <path
                d="M3 12h4v9H3v-9zm14-4h4v13h-4V8zm-7-6h4v19h-4V2z"
              />
            </g>
          </svg>
          <a
            className="chakra-linkbox__overlay css-1hnz6hu"
            href="/datasets"
            name="Datasets"
          >
            Datasets
          </a>
        </div>
        <div
          className="chakra-linkbox css-10n1vic"
        >
          <svg
            className="chakra-icon css-n17ngm"
            fill="currentColor"
            focusable={false}
            height="1em"
            stroke="currentColor"
            strokeWidth="0"
            style={
              Object {
                "color": undefined,
              }
            }
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z"
            />
          </svg>
          <a
            className="chakra-linkbox__overlay css-1hnz6hu"
            href="/users"
            name="Users"
          >
            Users
          </a>
        </div>
        <div
          className="chakra-linkbox css-10n1vic"
        >
          <svg
            baseProfile="tiny"
            className="chakra-icon css-n17ngm"
            fill="currentColor"
            focusable={false}
            height="1em"
            stroke="currentColor"
            strokeWidth="0"
            style={
              Object {
                "color": undefined,
              }
            }
            version="1.2"
            viewBox="0 0 24 24"
            width="1em"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12 14c1.381 0 2.631-.56 3.536-1.465.904-.904 1.464-2.154 1.464-3.535s-.56-2.631-1.464-3.535c-.905-.905-2.155-1.465-3.536-1.465s-2.631.56-3.536 1.465c-.904.904-1.464 2.154-1.464 3.535s.56 2.631 1.464 3.535c.905.905 2.155 1.465 3.536 1.465zM20 15c.69 0 1.315-.279 1.768-.731.453-.452.732-1.077.732-1.769 0-.69-.279-1.315-.732-1.768-.453-.453-1.078-.732-1.768-.732-.691 0-1.316.279-1.769.732-.452.453-.731 1.078-.731 1.768 0 .691.279 1.316.731 1.769s1.078.731 1.769.731zM20 15.59c-1.331 0-2.332.406-2.917.968-1.115-.917-2.878-1.558-5.083-1.558-2.266 0-3.995.648-5.092 1.564-.596-.565-1.608-.974-2.908-.974-2.188 0-3.5 1.09-3.5 2.182 0 .545 1.312 1.092 3.5 1.092.604 0 1.146-.051 1.623-.133l-.04.27c0 1 2.406 2 6.417 2 3.762 0 6.417-1 6.417-2l-.02-.255c.463.073.995.118 1.603.118 2.051 0 3.5-.547 3.5-1.092 0-1.092-1.373-2.182-3.5-2.182zM4 15c.69 0 1.315-.279 1.768-.732.453-.453.732-1.078.732-1.768 0-.689-.279-1.314-.732-1.768-.453-.452-1.078-.732-1.768-.732-.691 0-1.316.28-1.769.732-.452.454-.731 1.079-.731 1.768 0 .69.279 1.315.731 1.768.453.453 1.078.732 1.769.732z"
            />
          </svg>
          <a
            className="chakra-linkbox__overlay css-1hnz6hu"
            href="/groups"
            name="Groups"
          >
            Groups
          </a>
        </div>
      </div>
    </div>
    <div
      className="css-0"
    >
      <h1
        className="chakra-heading css-1dklj6k"
      >
        Hello Jest!
      </h1>
      <p
        className="chakra-text css-0"
      >
        something
      </p>
    </div>
  </div>,
  <span />,
]
`;
